name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  pr-labeler:
    name: Auto Label PR
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Label PR based on files changed
        uses: actions/labeler@v5
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  pr-size:
    name: PR Size Label
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Check PR size
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const additions = pr.additions;
            const deletions = pr.deletions;
            const changes = additions + deletions;

            let sizeLabel = '';
            if (changes < 50) {
              sizeLabel = 'size/XS';
            } else if (changes < 200) {
              sizeLabel = 'size/S';
            } else if (changes < 500) {
              sizeLabel = 'size/M';
            } else if (changes < 1000) {
              sizeLabel = 'size/L';
            } else {
              sizeLabel = 'size/XL';
            }

            const labels = ['size/XS', 'size/S', 'size/M', 'size/L', 'size/XL'];
            const currentLabels = pr.labels.map(l => l.name);

            for (const label of labels) {
              if (currentLabels.includes(label) && label !== sizeLabel) {
                await github.rest.issues.removeLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: pr.number,
                  name: label
                });
              }
            }

            if (!currentLabels.includes(sizeLabel)) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                labels: [sizeLabel]
              });
            }

  test-results-comment:
    name: Comment Test Results
    runs-on: ubuntu-latest
    needs: []
    if: always()
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Comment PR with test status
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const comment = `
            ## ðŸ§ª Test Status

            Tests are running... Check the [Actions tab](${context.payload.repository.html_url}/actions/runs/${context.runId}) for details.

            ### Required Checks:
            - âœ… Unit Tests
            - âœ… E2E Tests (Chromium, Firefox)
            - âœ… Type Check
            - âœ… Lint
            - âœ… Build

            Results will be updated when checks complete.
            `;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body: comment
            });
